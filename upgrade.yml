- name: Prompts
  hosts: localhost
  gather_facts: false
  vars_prompt:
    - name: upgrade_launcher
      prompt: "Upgrade Launcher? (y/n)"
      private: false
    - name: upgrade_containers
      prompt: "Upgrade containers? (y/n)"
      private: false
  tasks:
    - name: Store prompt inputs
      ansible.builtin.set_fact:
        upgrade_launcher: "{{ upgrade_launcher }}"
        upgrade_containers: "{{ upgrade_containers }}"

- name: Upgrade system
  hosts: all
  gather_facts: true
  gather_subset: '!all'
  become: true
  tasks:
    - name: Upgrade packages (apt)
      ansible.builtin.apt:
        update_cache: true
        upgrade: dist
      when: "ansible_os_family == 'Debian'"
    - name: Upgrade packages (dnf)
      ansible.builtin.dnf:
        name: "*"
        update_cache: true
        state: latest
      when: "ansible_os_family == 'RedHat'"
    - name: Autoremove unneeded packages (dnf)
      ansible.builtin.dnf:
        autoremove: true
      when: "ansible_os_family == 'RedHat'"
    - name: Check if chrisx.xyz SSL cert exists
      ansible.builtin.stat:
        path: /etc/ssl/chrisx.xyz
      register: ssl_check
    - name: Install chrisx.xyz cert
      ansible.builtin.import_role:
        name: inf/ssl
        tasks_from: chrisx.yml
      when: ssl_check.stat.exists
    - name: Check if arb.chrisx.xyz SSL cert exists
      ansible.builtin.stat:
        path: /etc/ssl/arb.chrisx.xyz
      register: arb_ssl_check
    - name: Install chrisx.xyz cert
      ansible.builtin.import_role:
        name: inf/ssl
        tasks_from: arb.yml
      when: arb_ssl_check.stat.exists

- name: Upgrade cert on storage
  hosts: storage
  gather_facts: false
  become: true
  tasks:
    - name: Install SSL cert for Cockpit
      ansible.builtin.import_role:
        name: inf/cockpit
        tasks_from: ssl.yml

- name: Set up Postgres databases
  hosts: db-postgres
  gather_facts: false
  become: true
  become_user: postgres
  tasks:
    - name: Set SSL cert permission
      ansible.builtin.file:
        path: /etc/ssl/arb.chrisx.xyz
        owner: postgres
        group: postgres
        recurse: true
      become_user: root
    - name: Set up Postgres databases for container apps
      ansible.builtin.import_role:
        name: app/containers
        tasks_from: create_postgres_db.yml
      when: hostvars['localhost']['upgrade_containers'] == 'y'

- name: Upgrade containers
  hosts: web-container
  gather_facts: false
  become: true
  tasks:
    - name: Install container apps
      ansible.builtin.import_role:
        name: app/containers
      when: hostvars['localhost']['upgrade_containers'] == 'y'
    - name: Reload Nginx
      ansible.builtin.command: "podman exec nginx nginx -s reload"
      when: hostvars['localhost']['upgrade_containers'] == 'y'

- name: Upgrade PHP apps
  hosts: web-php
  gather_facts: false
  become: true
  tasks:
    - name: Install launcher
      ansible.builtin.import_role:
        name: app/launcher
      when: hostvars['localhost']['upgrade_launcher'] == 'y'
