---
- name: Upgrade systems
  hosts: all
  become: true
  vars_prompt:
    - name: upgrade_oauth2_proxy
      prompt: "Upgrade oauth2-proxy? (y/n)"
  tasks:
  - name: Run apt dist-upgrade
    apt:
      update_cache: yes
      upgrade: dist
  - name: Clean up apt
    apt:
      autoclean: yes
      autoremove: yes

  - name: Check if oauth2-proxy exists
    stat:
      path: /opt/oauth2-proxy
    register: oauth2_proxy_check
  - name: Download oauth2-proxy
    when: upgrade_oauth2_proxy == 'y' and oauth2_proxy_check.stat.exists
    shell: curl -s https://api.github.com/repos/oauth2-proxy/oauth2-proxy/releases/latest | 
          grep 'linux-amd64.tar' | cut -d '"' -f 4 | tail -n1 | 
          xargs curl -L -o /opt/oauth2-proxy/oauth2-proxy.tgz
  - name: Extract oauth2-proxy
    when: upgrade_oauth2_proxy == 'y' and oauth2_proxy_check.stat.exists
    shell:
      chdir: /opt/oauth2-proxy
      cmd: tar -xf oauth2-proxy.tgz || true
  - name: Move oauth2-proxy binary
    when: upgrade_oauth2_proxy == 'y' and oauth2_proxy_check.stat.exists
    shell: mv /opt/oauth2-proxy/oauth2-proxy-*/oauth2-proxy /opt/oauth2-proxy/
  - name: Remove oauth2-proxy tarball
    when: upgrade_oauth2_proxy == 'y' and oauth2_proxy_check.stat.exists
    file:
      path: /opt/oauth2-proxy/oauth2-proxy.tgz
      state: absent
  - name: Clean up oauth2-proxy download
    when: upgrade_oauth2_proxy == 'y' and oauth2_proxy_check.stat.exists
    shell: rm -r /opt/oauth2-proxy/oauth2-proxy-*

  - name: Check if Dashboard exists
    stat:
      path: /var/www/html/internal
    register: dashboard_stat
  - name: Install Dashboard
    when: dashboard_stat.stat.exists
    copy:
      src: dashboard/
      dest: /var/www/html/

  - name: Check if FreshRSS exists
    stat:
      path: /var/www/html/freshrss
    register: freshrss_stat
  - name: Download FreshRSS
    when: freshrss_stat.stat.exists
    git:
      repo: https://github.com/FreshRSS/FreshRSS.git
      dest: /var/www/html/freshrss
      version: master
      depth: 1
  - name: FreshRSS - Set permissions
    when: freshrss_stat.stat.exists
    file:
      path: /var/www/html/freshrss/data
      state: directory
      recurse: true
      owner: www-data
      group: www-data

  - name: Check if BookStack exists
    stat:
      path: /var/www/bookstack
    register: bookstack_stat
  - name: Download BookStack
    when: bookstack_stat.stat.exists
    git:
      repo: https://github.com/BookStackApp/BookStack.git
      dest: /var/www/bookstack
      version: release
      depth: 1
  - name: BookStack - Set permissions (1/3)
    when: bookstack_stat.stat.exists
    file:
      path: /var/www/bookstack/storage
      state: directory
      recurse: true
      owner: www-data
      group: www-data
  - name: BookStack - Set permissions (2/3)
    when: bookstack_stat.stat.exists
    file:
      path: /var/www/bookstack/bootstrap/cache
      state: directory
      recurse: true
      owner: www-data
      group: www-data
  - name: BookStack - Set permissions (3/3)
    when: bookstack_stat.stat.exists
    file:
      path: /var/www/bookstack/public/uploads
      state: directory
      recurse: true
      owner: www-data
      group: www-data
  - name: BookStack - Composer install
    when: bookstack_stat.stat.exists
    shell:
      chdir: /var/www/bookstack
      cmd: composer install --no-dev
  - name: BookStack - Generate new key
    when: bookstack_stat.stat.exists
    shell:
      chdir: /var/www/bookstack  
      cmd: "php artisan key:generate --force"
  - name: BookStack - Database migration
    when: bookstack_stat.stat.exists
    shell:
      chdir: /var/www/bookstack
      cmd: "php artisan migrate --force"
