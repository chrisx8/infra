server {
	listen 443 ssl http2;
	server_name tinynet.chrisx.xyz;

	ssl_certificate /etc/ssl/private/fullchain.pem;
	ssl_certificate_key /etc/ssl/private/privkey.pem;

	add_header Permissions-Policy "interest-cohort=()" always;
	add_header Referrer-Policy "no-referrer" always;
	add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
	add_header X-Content-Type-Options "nosniff" always;
	add_header X-Frame-Options "DENY" always;
	add_header X-Permitted-Cross-Domain-Policies "none" always;
	add_header X-Robots-Tag "none" always;
	add_header X-XSS-Protection "1; mode=block" always;

	include snippets/authproxy.conf;

	root /var/www/html;
	index index.html;
	try_files $uri $uri/ =404;

	# dashboard - static
	location / {
		add_header Cache-Control "no-cache";
		add_header Content-Security-Policy "base-uri 'none'; object-src 'none'; script-src 'none'; ";
		add_header Permissions-Policy "interest-cohort=()";
		add_header Referrer-Policy "no-referrer";
		add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";
		add_header X-Content-Type-Options "nosniff";
		add_header X-Frame-Options "DENY";
		add_header X-Permitted-Cross-Domain-Policies "none";
		add_header X-Robots-Tag "none";
		add_header X-XSS-Protection "1; mode=block";

		location /internal {
			auth_request /authproxy/internal/auth;
			error_page 401 = @internalauth;
		}
		location /external {
			auth_request /authproxy/external/auth;
			error_page 401 = @externalauth;
		}
		location = /internal/vpn.html {
			auth_request /authproxy/internal/auth;
			error_page 401 = @internalauth;

			error_page 403 404 /generate_404.html;
			allow 10.69.0.0/24;
			allow 10.69.90.0/24;
			deny all;
		}
	}

	# bookstack - web1
	location /wiki {
		proxy_pass http://web1;
		proxy_set_header Host $host;
		proxy_set_header X-Forwarded-For $remote_addr;
		proxy_set_header X-Forwarded-Proto $scheme;
	}
	location /wiki/wiki {
		return 302 /wiki/;
	}

	# miniflux - web2
	location /miniflux {
		proxy_pass http://web2:8080;
		proxy_set_header Host $host;
		proxy_set_header X-Forwarded-For $remote_addr;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_hide_header Referrer-Policy;
		proxy_hide_header Strict-Transport-Security;
		proxy_hide_header X-Content-Type-Options;
		proxy_hide_header X-Frame-Options;
		proxy_hide_header X-XSS-Protection;
	}

	# log out of everything
	location = /logout {
		return 302 https://tinynet-iam.chrisx.xyz/authproxy/internal/sign_out?rd=https://tinynet-iam.chrisx.xyz/authproxy/external/sign_out?rd=https://tinynet-iam.chrisx.xyz/realms/master/protocol/openid-connect/logout?redirect_uri=https://tinynet.chrisx.xyz;
	}

	location = /generate_404.html {
		internal;
	}
}
