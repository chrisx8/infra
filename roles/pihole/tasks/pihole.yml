- name: Create Pi-hole config dir
  ansible.builtin.file:
    name: /etc/pihole
    state: directory
    mode: 0755
- name: Copy Pi-hole config
  ansible.builtin.copy:
    src: setupVars.conf
    dest: /etc/pihole/setupVars.conf
    owner: root
    group: root
    mode: 0644

- name: Download Pi-hole install script
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/pi-hole/pi-hole/master/automated%20install/basic-install.sh
    dest: /tmp/pihole-basic-install.sh
    mode: 0750
  check_mode: false
- name: Run Pi-hole install script
  ansible.builtin.command:
    cmd: "env PIHOLE_SKIP_OS_CHECK=true /tmp/pihole-basic-install.sh --unattended"
  changed_when: true
- name: Delete Pi-hole install script
  ansible.builtin.file:
    path: /tmp/pihole-basic-install.sh
    state: absent
  check_mode: false

- name: Copy pihole-FTL config
  ansible.builtin.blockinfile:
    path: /etc/pihole/pihole-FTL.conf
    block: |
      BLOCK_ICLOUD_PR=false
      CHECK_LOAD=false
      MOZILLA_CANARY=true
      PIHOLE_PTR=NONE
      SHOW_DNSSEC=false
    state: present

- name: Copy dnsmasq config
  ansible.builtin.copy:
    src: 99-custom.conf
    dest: /etc/dnsmasq.d/99-custom.conf
    mode: 0644

- name: Configure crontab - daily Gravity update
  ansible.builtin.cron:
    name: Update Pi-hole Gravity lists
    job: /usr/local/bin/pihole -g
    hour: 7
    minute: 0
    state: present

- name: Restart Pi-hole
  ansible.builtin.command:
    cmd: "pihole restartdns"
  changed_when: true
