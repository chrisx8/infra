- name: Generate new password for PostgreSQL miniflux user
  command: "echo {{ lookup('password', '/dev/null chars=ascii_letters,digits length=64') }}"
  register: postgres_miniflux_password
- name: Create miniflux database
  become_user: postgres
  postgresql_db:
    name: miniflux
    state: present
- name: Create PostgreSQL miniflux user
  become_user: postgres
  postgresql_user:
    db: miniflux
    name: miniflux
    password: "{{ postgres_miniflux_password.stdout }}"
    role_attr_flags: "SUPERUSER"

- name: Check if Miniflux is configured
  stat:
    path: /etc/miniflux.conf
  register: miniflux_stat

- name: Download Miniflux
  shell: curl -s https://api.github.com/repos/miniflux/v2/releases/latest | 
         grep 'amd64.deb' | cut -d '"' -f 4 | tail -n1 | 
         xargs curl -L -o /tmp/miniflux_amd64.deb
- name: Install Miniflux from deb package
  apt:
    deb: /tmp/miniflux_amd64.deb
- name: Delete Miniflux deb package
  file:
    path: /tmp/miniflux_amd64.deb
    state: absent

- name: Install Miniflux configuration
  when: not miniflux_stat.stat.exists
  template:
    src: miniflux.conf
    dest: /etc/miniflux.conf
- name: Update database credential
  when: miniflux_stat.stat.exists
  lineinfile:
    path: /etc/miniflux.conf
    regex: "^DATABASE_URL="
    line: "DATABASE_URL=postgres://miniflux:{{ postgres_miniflux_password.stdout }}@127.0.0.1/miniflux"

- name: Restart Miniflux
  systemd:
    name: miniflux
    state: restarted
    enabled: true
    daemon-reload: true

- name: Drop privileges on PostgreSQL miniflux user
  become_user: postgres
  postgresql_user:
    db: miniflux
    name: miniflux
    password: "{{ postgres_miniflux_password.stdout }}"
    role_attr_flags: "NOSUPERUSER"
