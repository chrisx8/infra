version: '3'

services:
  cloudflared:
    container_name: cloudflared
    image: cloudflare/cloudflared:{{ cloudflared_info['json']['tag_name'] }}
    command: tunnel run --token {{ cloudflared_token }}
    cap_drop:
      - all
    security_opt:
      - no-new-privileges
    restart: always
  nginx:
    container_name: nginx
    image: nginx:alpine
    ports:
      - 80:80
      - 443:443
    volumes:
      - ~/log/nginx:/var/log/nginx:z
      - /etc/ssl:/etc/ssl:z
      - ./nginx/conf.d:/etc/nginx/conf.d:Z
      - ./nginx/www:/var/www:Z
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:Z
    depends_on:
      - gitea
      - keycloak
      - miniflux
      - vaultwarden
    security_opt:
      - no-new-privileges
    restart: always

  gitea:
    container_name: gitea
    image: gitea/gitea:latest
    env_file: ./gitea.env
    volumes:
      - gitea_data:/data:Z
      - ./gitea/templates:/data/gitea/templates:Z
      - /etc/localtime:/etc/localtime:ro
    security_opt:
      - no-new-privileges
    restart: unless-stopped
  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:{{ keycloak_version }}
    command: start --auto-build
    env_file: ./keycloak.env
    cap_drop:
      - all
    security_opt:
      - no-new-privileges
    restart: unless-stopped
  miniflux:
    container_name: miniflux
    image: miniflux/miniflux:latest
    env_file: ./miniflux.env
    cap_drop:
      - all
    security_opt:
      - no-new-privileges
    restart: unless-stopped
  vaultwarden:
    container_name: vaultwarden
    image: vaultwarden/server:alpine
    env_file: ./vaultwarden.env
    user: nobody:nogroup
    volumes:
      - vaultwarden_data:/data:Z
    cap_drop:
      - all
    security_opt:
      - no-new-privileges
    restart: unless-stopped

volumes:
  cloudflared:
  gitea_data:
  vaultwarden_data:
