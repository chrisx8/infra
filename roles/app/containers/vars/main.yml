container_defaults: &container_defaults
  generate_systemd:
    new: true
    container_prefix: c
    path: /etc/systemd/system
    restart_policy: on-failure
  network: ct
  recreate: true
  rm: true
  security_opt:
    - no-new-privileges
  state: present

container_specs:
  - name: gitea
    image: docker.io/gitea/gitea:latest
    env_file: "{{ containers_dir.path }}/gitea.env"
    volumes:
      - gitea_data:/data:Z
      - "{{ containers_dir.path }}/gitea/templates:/data/gitea/templates:Z"
    <<: *container_defaults
  - name: keycloak
    image: quay.io/keycloak/keycloak:{{ keycloak_version }}
    command: start
    env_file: "{{ containers_dir.path }}/keycloak.env"
    cap_drop:
      - all
    <<: *container_defaults
  - name: miniflux
    image: docker.io/miniflux/miniflux:latest
    env_file: "{{ containers_dir.path }}/miniflux.env"
    cap_drop:
      - all
    <<: *container_defaults
  - name: vaultwarden
    image: docker.io/vaultwarden/server:testing-alpine
    env_file: "{{ containers_dir.path }}/vaultwarden.env"
    user: nobody:nogroup
    volumes:
      - vaultwarden_data:/data:Z
    cap_drop:
      - all
    <<: *container_defaults
  - name: nginx
    image: docker.io/library/nginx:alpine
    ports:
      - 80:80
      - 443:443
    volumes:
      - /root/log/nginx:/var/log/nginx:z
      - /etc/ssl:/etc/ssl:z
      - "{{ containers_dir.path }}/nginx/conf.d:/etc/nginx/conf.d:Z"
      - "{{ containers_dir.path }}/nginx/www:/var/www:Z"
      - "{{ containers_dir.path }}/nginx/nginx.conf:/etc/nginx/nginx.conf:Z"
    <<: *container_defaults
  - name: cloudflared
    image: docker.io/cloudflare/cloudflared:latest
    command: tunnel run --token {{ cloudflared_token }}
    cap_drop:
      - all
    <<: *container_defaults
