- name: Download and extract latest Nextcloud release tarball
  unarchive:
    src: https://download.nextcloud.com/server/releases/latest.tar.bz2
    dest: /var/www
    remote_src: yes

- name: Change Nextcloud directory permission
  file:
    path: /var/www/nextcloud
    state: directory
    recurse: yes
    owner: www-data
    group: www-data

- name: Prompt for Nextcloud setup
  when: not nextcloud_exist.stat.exists
  pause:
    prompt: "Finish Nextcloud installation in a web browser \n
             Database: MySQL on localhost \n
             DB Name: nextcloud \n
             DB Username: nextcloud \n
             DB Password: {{ mysql_nextcloud_password.stdout }} \n\n
            "

- name: Update database credential
  lineinfile:
    path: /var/www/nextcloud/config/config.php
    regexp: 'dbpassword'
    line: "'dbpassword' => '{{ mysql_nextcloud_password.stdout }}',"
- name: Inject extra Nextcloud config options
  when: not nextcloud_exist.stat.exists
  lineinfile:
    path: /var/www/nextcloud/config/config.php
    regexp: 'installed'
    line: "'installed' => 'true',\n
           'overwrite.cli.url' => 'https://tinycloud.chrisx.xyz',\n
           'htaccess.RewriteBase' => '/',\n
           'trusted_proxies' => ['10.69.233.11'],\n
           'auth.webauthn.enabled' => false,\n
           'default_phone_region' => 'US',\n
           'memcache.local' => '\\OC\\Memcache\\APCu',
          "

- name: Update htaccess
  command: "runuser -u www-data php /var/www/nextcloud/occ maintenance:update:htaccess"

- name: Configure crontab for www-data
  cron:
    env: true
    name: MAILTO
    user: www-data
    job: ""
- name: Install Nextcloud cron job
  cron:
    name: "Nextcloud background jobs"
    minute: "*/5"
    user: www-data
    job: "php --define apc.enable_cli=1 -f /var/www/nextcloud/cron.php"
