---
- name: Get confirmation
  run_once: true
  block:
    - name: Set prompt string
      ansible.builtin.set_fact:
        _confirm_expected: CONFIRM {{ ansible_play_hosts | length }}
    - name: Confirm removal
      register: _confirm
      ansible.builtin.pause:
        prompt: |-
          Are you sure you want to remove {{ ansible_play_hosts | length }} app(s)?
          This will also delete the DATABASE AND ALL VOLUMES (if applicable)!
          Type "{{ _confirm_expected }}" to continue
    - name: Fail if not confirmed
      when: _confirm.user_input != _confirm_expected
      ansible.builtin.fail:
        msg: TASK NOT CONFIRMED

- name: Fetch user {{ cx_container_app_user }}
  register: _container_user
  ansible.builtin.user:
    name: "{{ cx_container_app_user }}"
    state: present

- name: Validate system and role vars
  ansible.builtin.import_tasks: check.yml

- name: Generate container spec
  ansible.builtin.set_fact:
    _container_spec: "{{ cx_container_app_spec | combine(_container_defaults) }}"

- name: Generate systemd unit name
  ansible.builtin.set_fact:
    _container_systemd_unit: "{{ _container_spec.generate_systemd.container_prefix }}-{{ _container_spec.name }}"

- name: Remove container
  become: true
  become_user: "{{ cx_container_app_user }}"
  block:
    - name: Disable and stop systemd socket
      when: cx_container_app_socket_listen_streams
      ansible.builtin.systemd:
        name: "{{ _container_systemd_unit }}.socket"
        enabled: false
        scope: user
        state: stopped
    - name: Disable and stop systemd service
      ansible.builtin.systemd:
        name: "{{ _container_systemd_unit }}.service"
        enabled: false
        scope: user
        state: stopped
    - name: Delete systemd service config
      ansible.builtin.file:
        path: "{{ _container_spec.generate_systemd.path }}/{{ _container_systemd_unit }}.service"
        state: absent
    - name: Delete systemd socket config
      ansible.builtin.file:
        path: "{{ _container_spec.generate_systemd.path }}/{{ _container_systemd_unit }}.socket"
        state: absent
    - name: Delete container
      containers.podman.podman_container:
        name: "{{ _container_spec.name }}"
        state: absent
    - name: Delete image
      containers.podman.podman_image:
        name: "{{ _container_spec.image }}"
        state: absent
    - name: Delete container network
      failed_when: false
      when: cx_container_app_network
      containers.podman.podman_network:
        name: "{{ cx_container_app_network }}"
        state: absent
    - name: Delete container volumes
      loop: "{{ cx_container_app_volumes }}"
      containers.podman.podman_volume:
        name: "{{ item }}"
        state: absent

- name: Remove nightly backup job
  become: true
  become_user: "{{ cx_container_app_user }}"
  when: cx_container_app_backup_ping_url
  block:
    - name: Delete volume backup script
      ansible.builtin.file:
        path: "{{ _container_user.home }}/scripts/backup_{{ cx_container_app_spec.name }}.sh"
        state: absent
    - name: Remove volume backup cron job
      ansible.builtin.cron:
        name: nightly volume backup for {{ cx_container_app_spec.name }}
        job: "{{ _container_user.home }}/scripts/backup_{{ cx_container_app_spec.name }}.sh"
        state: absent
